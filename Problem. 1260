# backjoon 1260번: DFS와 BFS
import sys
from queue import Queue
input = sys.stdin.readline

N, M, V = map(int, input().split())
vtx = [i for i in range(1, N + 1)]
adj = [[] for i in range(N)]

for i in range(M):
    a, b = map(int, input().split())
    adj[a-1].append(b-1)
    adj[b-1].append(a-1)

for i in range(N):
    adj[i].sort()
    

def DFS(vtx, adj, s, visited):
    print(vtx[s], end = ' ')
    visited[s] = True
    
    for v in adj[s]:
        if visited[v] == False:
            DFS(vtx, adj, v, visited)

def BFS(vtx, adj, s):
    n = len(vtx)
    visited = [False] * n
    Q = Queue()
    Q.put(s)
    visited[s] = True
    
    while not Q.empty():
        u = Q.get()
        print(vtx[u], end = ' ')
        for v in adj[u]:
            if visited[v] == False:
                Q.put(v)
                visited[v] = True

DFS(vtx, adj, V - 1, [False] * len(vtx))
print()
BFS(vtx, adj, V - 1)
