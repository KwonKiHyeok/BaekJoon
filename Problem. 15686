# Baekjoon 15686번: 치킨 배달
import sys
from collections import deque
from itertools import combinations
input = sys.stdin.readline

N, M = map(int, input().split())

city = [[] for _ in range(N)]
market_info = []
house_info = []
tlst = []

for i in range(N):
    arr = input().split()
    for j in range(N):
        city[i].append(int(arr[j]))
        if arr[j] == '2':
            market_info.append((i, j))
        elif arr[j] == '1':
            house_info.append((i, j))

def cal(temp):
    ans = 0
    for h_y, h_x in house_info:
        limit = float('inf')
        for m_y, m_x in temp:
            distance = abs(m_y-h_y) + abs(m_x-h_x)
            limit = min(limit, distance)
        
        ans += limit

    return ans

res = float('inf')
def dfs(tlst, m):
    global M, res

    if m == len(market_info):
        if len(tlst) == M:
            res = min(res, cal(tlst))
        return 
    
    dfs(tlst + [market_info[m]], m+1)
    dfs(tlst, m+1)

dfs(tlst, 0)
print(res)
