# Baekjoon 2468번: 안전 영역

import sys
sys.setrecursionlimit(10**6)
input = sys.stdin.readline
from collections import deque

N = int(input())
array = [list(map(int, input().split())) for i in range(N)]
max_height = max(map(max, array))
count = [1] * 100

def BFS(x, y, height, visited):
    queue = deque([(x, y)])
    visited[y][x] = True
    directions = [(-1, 0), (1, 0), (0, -1), (0, 1)]
    
    while queue:
        cx, cy = queue.popleft()
        for dx, dy in directions:
            nx, ny = dx + cx, dy + cy
            if 0 <= nx < N and 0 <= ny < N and not visited[ny][nx] and array[ny][nx] > height:
                visited[ny][nx] = True
                queue.append((nx, ny))
                
    
def area(height):

    visited = [[False] * N for _ in range(N)]
    count = 0
    
    for i in range(N):
        for j in range(N):
            if array[i][j] > height and not visited[i][j]:
                count += 1
                BFS(j, i, height, visited)
    
    return count
    
max_area = 0

for i in range(max_height + 1):
    max_area = max(max_area, area(i))    

print(max_area)
